import telebot
from telebot import types
import time
import math
import random

bot = telebot.TeleBot('5722699716:AAGykIOB_7HtI-xPMD8sI5KHdTYFt9UNdwI')

# üëâ üôè üëÜ üëá üòÖ üëã üôå ‚ò∫Ô∏è ‚ùó Ô∏è‚ÄºÔ∏è ‚úåÔ∏è üëå ‚úä üë®‚Äçüíª  ü§ñ üòâ  ‚òùÔ∏è ‚ù§Ô∏è üí™ ‚úçÔ∏è üéØ  ‚õî  Ô∏è‚úÖ üìäüìàüßÆ   üó≥Ô∏è

#todo: 1. –ü–æ–º–µ–Ω—è—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–ª—è —É–º–Ω–æ–∂–µ–Ω–∏–π, –¥–µ–ª–µ–Ω–∏–π –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å —Å—É–º–º–æ–π.
#todo: 2. –ü–æ–º–µ–Ω—è—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ Markdown –≤ –¥–µ–ª–µ–Ω–∏–∏ –∏ —É–º–Ω–æ–∂–µ–Ω–∏–∏
#todo: 3. –§–∏–∫—Å–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Ä–∞–∑–Ω–æ—Å—Ç–∏
#todo: 4. –†–∞–∑–≤–∏–≤–∞–µ–º –∏–≥—Ä—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É /game
#todo: 5. –î–µ–ª–∞–µ–º –∫–æ–º–∞–Ω–¥—É preview –æ –ø—Ä–æ–µ–∫—Ç–µ


@bot.callback_query_handler(func=lambda call: True)
def step(call):
    markup = telebot.types.InlineKeyboardMarkup(row_width=1)

    if call.data == 'key':
        pass

# region –ö–æ–º–∞–Ω–¥–∞ GAME
@bot.message_handler(commands=['game'])
def game(message):
    M = ['+', '-', '*', '/']
    a = random.randint(1, 10)
    b = random.randint(1, 10)
    s = random.choice(M)
    m = random.randint(1, 10)
    n = random.randint(1, 10)
    bot.send_message(message.chat.id, f'–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä: `{a}/{b} {s} {m}/{n} = `', parse_mode='Markdown')

    if s == '+':
        NOK = LCM(b, n)

        a = a * (NOK // b)
        m = m * (NOK // n)
        znam = n * (NOK // n)

        r = f'{a + m}/{znam}'

    elif s == '-':
        NOK = LCM(b, n)

        a = a * (NOK // b)
        m = m * (NOK // n)
        znam = n * (NOK // n)

        r = f'{a - m}/{znam}'

    elif s == '*':
        NOK = LCM(b, n)

        x = a * m
        znam = b * n

        cel = (x) // znam
        ost = (x) % znam

        NOD = math.gcd(ost, znam)

        r = f'{a * m}/{znam}'

    elif s == '/':
        NOK = LCM(b, n)

        x = a * n
        znam = b * m

        cel = (x) // znam
        ost = (x) % znam

        NOD = math.gcd(ost, znam)

        r = f'{x}/{znam}'



    @bot.message_handler(content_types=['text'])
    def message_input(message):
        x = message.text
        if x == r:
            bot.send_message(message.chat.id, f'–í–µ—Ä–Ω–æ, –µ—â–µ –ø—Ä–∏–º–µ—Ä üëâ /game', parse_mode='Markdown')
        else:
            bot.send_message(message.chat.id, f'–ù–µ–≤–µ—Ä–Ω–æ! –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ –æ–¥–∏–Ω –ø—Ä–∏–º–µ—Ä üëâ /game', parse_mode='Markdown')

    bot.register_next_step_handler(message, message_input)


# region –ö–æ–º–∞–Ω–¥–∞ START
@bot.message_handler(commands=['start'])
def start(message):
    ID = message.chat.id
    bot.send_message(message.chat.id, f'–í–∞—à user ID: `{ID}`', parse_mode='Markdown')

    first_name = message.from_user.first_name
    message_text = f'–ü—Ä–∏–≤–µ—Ç *{first_name}*! –ö–∞–∫ —É —Ç–µ–±—è –¥–µ–ª–∞?\n–†–∞–¥—ã, —á—Ç–æ —Ç—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã—Ö –¥—Ä–æ–±–µ–π üôè\n\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å [—Å—Å—ã–ª–∫–æ–π –Ω–∞ —Ç–µ–æ—Ä–∏—é](https://skysmart.ru/articles/mathematic/obyknovennye-drobi)'

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton('–°—É–º–º–∞ –¥—Ä–æ–±–µ–π')
    btn2 = types.KeyboardButton('–†–∞–∑–Ω–æ—Å—Ç—å –¥—Ä–æ–±–µ–π')
    btn3 = types.KeyboardButton('–£–º–Ω–æ–∂–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π')
    btn4 = types.KeyboardButton('–î–µ–ª–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π')
    markup.add(btn1, btn2, btn3, btn4)

    bot.send_message(message.chat.id, message_text, parse_mode='Markdown', disable_web_page_preview=True, reply_markup=markup)
# endregion –ö–æ–º–∞–Ω–¥–∞ START

def LCM(x, y):
    maxi = max(x, y)
    for i in range(maxi, 1000000):
        if i % x == 0 and i % y == 0:
            return i


@bot.message_handler(content_types=['text'])
def mess(message):
    get_message_bot = message.text.strip()
    get_message_bot = get_message_bot.lower()

    # region –ö–Ω–æ–ø–∫–∞: –°—É–º–º–∞ –¥—Ä–æ–±–µ–π
    if get_message_bot == "—Å—É–º–º–∞ –¥—Ä–æ–±–µ–π":
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–≤–µ –¥—Ä–æ–±–∏ –∏ –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É –Ω–∏–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `[a/b + m/n]`\n\n–≥–¥–µ:', parse_mode='Markdown')
        pic_1 = open('photo/plus.jpg', 'rb')
        bot.send_photo(message.chat.id, pic_1)

        @bot.message_handler(content_types=['text'])
        def message_input(message):
            text_message = message.text
            try:
                M = [i for i in text_message.replace('/', ' ').split()]

                a = int(M[0])
                b = int(M[1])
                s = M[2]
                m = int(M[3])
                n = int(M[4])

                if s == '+':
                    NOK = LCM(b, n)

                    a = a * (NOK // b)
                    m = m * (NOK // n)
                    znam = n * (NOK // n)

                    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–æ–¥–∏–º –∫ –æ–±—â–µ–º—É –Ω–∞–∏–º–µ–Ω—å—à–µ–º—É –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é: *{a}/{znam} {s} {m}/{znam}*', parse_mode='Markdown')

                    bot.send_message(message.chat.id, f'–°–ª–æ–∂–∏–ª–∏ –¥–≤–µ –¥—Ä–æ–±–∏: *{a + m}/{znam}*', parse_mode='Markdown')

                    cel = (a + m) // znam
                    ost = (a + m) % znam

                    NOD = math.gcd(ost, znam)

                    if cel != 0:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: *{cel} ({ost // NOD}/{znam // NOD})*\n\n', parse_mode='Markdown')
                    else:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: *({ost // NOD}/{znam // NOD})*', parse_mode='Markdown')
                else:
                    bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞–∫ *+*', parse_mode='Markdown')
            except IndexError:
                bot.send_message(message.chat.id,
                             f"–í–≤–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://ru.stackoverflow.com/questions/1377838/%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D1%8F-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B0%D1%8E-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D1%83-indexerror-list-index-out-of-range-%D0%B8-%D0%BA%D0%B0%D0%BA-%D0%B5%D0%B5-%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C)",
                             parse_mode="Markdown", disable_web_page_preview=True)
            except ValueError:
                bot.send_message(message.chat.id, f"–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞,–∑–Ω–∞–∫, –ø–æ—Ç–æ–º –µ—â—ë –¥–≤–∞ —á–∏—Å–ª–∞, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://pythonim.ru/osnovy/valueerror-python)", parse_mode="Markdown", disable_web_page_preview=True)

        bot.register_next_step_handler(message, message_input)
    # endregion –ö–Ω–æ–ø–∫–∞: –°—É–º–º–∞ –¥—Ä–æ–±–µ–π

    # region –ö–Ω–æ–ø–∫–∞: –†–∞–∑–Ω–æ—Å—Ç—å –¥—Ä–æ–±–µ–π
    if get_message_bot == "—Ä–∞–∑–Ω–æ—Å—Ç—å –¥—Ä–æ–±–µ–π":
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–≤–µ –¥—Ä–æ–±–∏ –∏ –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É –Ω–∏–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: `[a/b - m/n]`', parse_mode='Markdown')
        pic_2 = open('photo/minus.jpg', 'rb')
        bot.send_photo(message.chat.id, pic_2)


        @bot.message_handler(content_types=['text'])
        def message_input(message):
            text_message = message.text
            try:
                M = [i for i in text_message.replace('/', ' ').split()]

                a = int(M[0])
                b = int(M[1])
                s = M[2]
                m = int(M[3])
                n = int(M[4])

                if s == '-':
                    NOK = LCM(b, n)

                    a = a * (NOK // b)
                    m = m * (NOK // n)
                    znam = n * (NOK // n)

                    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–æ–¥–∏–º –∫ –æ–±—â–µ–º—É –Ω–∞–∏–º–µ–Ω—å—à–µ–º—É –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é: *{a}/{znam} {s} {m}/{znam}*', parse_mode='Markdown')

                    bot.send_message(message.chat.id, f'–í—ã—á–ª–∏ –¥–≤–µ –¥—Ä–æ–±–∏: *{a - m}/{znam}*', parse_mode='Markdown')


                    if a - m < 0:
                        cel = ((a - m) // znam) + 1
                        ost = (abs(a - m) % znam)
                    else:
                        cel = ((a - m) // znam)
                        ost = (a - m) % znam

                    NOD = math.gcd(ost, znam)

                    if cel != 0:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: *{cel} ({ost // NOD}/{znam // NOD})*', parse_mode='Markdown')
                    else:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: *({ost // NOD}/{znam // NOD})*', parse_mode='Markdown')
                else:
                    bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞–∫ *-*', parse_mode='Markdown')
            except IndexError:
                bot.send_message(message.chat.id,
                             f"–í–≤–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://ru.stackoverflow.com/questions/1377838/%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D1%8F-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B0%D1%8E-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D1%83-indexerror-list-index-out-of-range-%D0%B8-%D0%BA%D0%B0%D0%BA-%D0%B5%D0%B5-%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C)",
                             parse_mode="Markdown", disable_web_page_preview=True)
            except ValueError:
                bot.send_message(message.chat.id,
                                 f"–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞,–∑–Ω–∞–∫, –ø–æ—Ç–æ–º –µ—â—ë –¥–≤–∞ —á–∏—Å–ª–∞, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://pythonim.ru/osnovy/valueerror-python)",
                                 parse_mode="Markdown", disable_web_page_preview=True)

        bot.register_next_step_handler(message, message_input)
    # endregion –ö–Ω–æ–ø–∫–∞: –†–∞–∑–Ω–æ—Å—Ç—å –¥—Ä–æ–±–µ–π

    # region –ö–Ω–æ–ø–∫–∞: –£–º–Ω–æ–∂–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π
    if get_message_bot == "—É–º–Ω–æ–∂–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π":  # –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–≤–µ –¥—Ä–æ–±–∏ –∏ –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É –Ω–∏–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [a b * m n]')  # –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        @bot.message_handler(content_types=['text'])  # —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        def message_input(message):  # —Ñ—É–Ω–∫—Ü–∏—è
            text_message = message.text
            try:
                M = [i for i in text_message.split()]

                a = int(M[0])
                b = int(M[1])
                s = M[2]
                m = int(M[3])
                n = int(M[4])

                if s == '*':
                    NOK = LCM(b, n)

                    x = a * m
                    znam = b * n


                    cel = (x) // znam
                    ost = (x) % znam

                    NOD = math.gcd(ost, znam)


                    bot.send_message(message.chat.id, f'–£–º–Ω–æ–∂–∏–ª–∏ –∏ –¥–≤–µ –¥—Ä–æ–±–∏: {a * m}/{znam}')

                    if a * m < 0:
                        cel = ((a * m) // znam) + 1
                        ost = -((a * m) % znam)
                    else:
                        cel = (a * m) // znam
                        ost = (a * m) % znam

                    NOD = math.gcd(ost, znam)

                    if cel != 0:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: {cel} ({ost // NOD}/{znam // NOD})')
                    else:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: ({ost // NOD}/{znam // NOD})')
                else:
                    bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞–∫ *')

            except IndexError:
                bot.send_message(message.chat.id,
                             f"–í–≤–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://ru.stackoverflow.com/questions/1377838/%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D1%8F-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B0%D1%8E-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D1%83-indexerror-list-index-out-of-range-%D0%B8-%D0%BA%D0%B0%D0%BA-%D0%B5%D0%B5-%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C)",
                             parse_mode="Markdown", disable_web_page_preview=True)
            except ValueError:
                bot.send_message(message.chat.id,
                                 f"–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞,–∑–Ω–∞–∫, –ø–æ—Ç–æ–º –µ—â—ë –¥–≤–∞ —á–∏—Å–ª–∞, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://pythonim.ru/osnovy/valueerror-python)",
                                 parse_mode="Markdown", disable_web_page_preview=True)
        bot.register_next_step_handler(message, message_input)
    # endregion –ö–Ω–æ–ø–∫–∞: –£–º–Ω–æ–∂–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π

    # region –ö–Ω–æ–ø–∫–∞: –î–µ–ª–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π
    if get_message_bot == "–¥–µ–ª–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π":  # –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–≤–µ –¥—Ä–æ–±–∏ –∏ –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏ –º–µ–∂–¥—É –Ω–∏–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [a b / m n]')  # –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        @bot.message_handler(content_types=['text'])  # —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        def message_input(message):  # —Ñ—É–Ω–∫—Ü–∏—è
            text_message = message.text
            try:
                M = [i for i in text_message.split()]

                a = int(M[0])
                b = int(M[1])
                s = M[2]
                m = int(M[3])
                n = int(M[4])

                if s == '/':
                    NOK = LCM(b, n)

                    x = a * n
                    znam = b * m


                    cel = (x) // znam
                    ost = (x) % znam

                    NOD = math.gcd(ost, znam)


                    bot.send_message(message.chat.id, f'–£–º–Ω–æ–∂–∏–ª–∏ –∏ –¥–≤–µ –¥—Ä–æ–±–∏: {x}/{znam}')

                    if x < 0:
                        cel = ((x) // znam) + 1
                        ost = -((x) % znam)
                    else:
                        cel = (x) // znam
                        ost = (x) % znam

                    NOD = math.gcd(ost, znam)

                    if cel != 0:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: {cel} ({ost // NOD}/{znam // NOD})')
                    else:
                        bot.send_message(message.chat.id, f'–†–µ–∑—É–ª—å—Ç–∞—Ç –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: ({ost // NOD}/{znam // NOD})')
                else:
                    bot.send_message(message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–Ω–∞–∫ *')

            except IndexError:
                bot.send_message(message.chat.id,
                             f"–í–≤–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://ru.stackoverflow.com/questions/1377838/%D0%9F%D0%BE%D1%87%D0%B5%D0%BC%D1%83-%D1%8F-%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B0%D1%8E-%D0%BE%D1%88%D0%B8%D0%B1%D0%BA%D1%83-indexerror-list-index-out-of-range-%D0%B8-%D0%BA%D0%B0%D0%BA-%D0%B5%D0%B5-%D0%B8%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D1%82%D1%8C)",
                             parse_mode="Markdown", disable_web_page_preview=True)
            except ValueError:
                bot.send_message(message.chat.id,
                                 f"–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –¥–≤–∞ —á–∏—Å–ª–∞,–∑–Ω–∞–∫, –ø–æ—Ç–æ–º –µ—â—ë –¥–≤–∞ —á–∏—Å–ª–∞, [–ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—à–∏–±–∫–µ](https://pythonim.ru/osnovy/valueerror-python)",
                                 parse_mode="Markdown", disable_web_page_preview=True)

        bot.register_next_step_handler(message, message_input)
    # endregion –ö–Ω–æ–ø–∫–∞: –î–µ–ª–µ–Ω–∏–µ –¥—Ä–æ–±–µ–π



if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            time.sleep(3)
            print(e)